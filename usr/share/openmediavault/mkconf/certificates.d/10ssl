#!/bin/sh
#
# This file is part of OpenMediaVault.
#
# @license   http://www.gnu.org/licenses/gpl.html GPL Version 3
# @author    Volker Theile <volker.theile@openmediavault.org>
# @copyright Copyright (c) 2009-2015 Volker Theile
#
# OpenMediaVault is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# OpenMediaVault is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with OpenMediaVault. If not, see <http://www.gnu.org/licenses/>.

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

OMV_SSL_CERTIFICATE_DIR=${OMV_SSL_CERTIFICATE_DIR:-"/etc/ssl"}
OMV_SSL_CERTIFICATE_PREFIX=${OMV_SSL_CERTIFICATE_PREFIX:-"openmediavault-"}

# Remove all certificate files.
find "${OMV_SSL_CERTIFICATE_DIR}/certs" -type f -iname "${OMV_SSL_CERTIFICATE_PREFIX}*.crt" -print0 | xargs -0r rm -f
find "${OMV_SSL_CERTIFICATE_DIR}/private" -type f -iname "${OMV_SSL_CERTIFICATE_PREFIX}*.key" -print0 | xargs -0r rm -f

# Create the certificate files.
xmlstarlet sel -t -m "//system/certificates/sslcertificate" \
  -v uuid -i "position() != last()" -n -b \
  ${OMV_CONFIG_FILE} | xmlstarlet unesc |
  while read uuid; do
	  crtfile="${OMV_SSL_CERTIFICATE_DIR}/certs/${OMV_SSL_CERTIFICATE_PREFIX}${uuid}.crt"
	  xmlstarlet sel -t -m "//system/certificates/sslcertificate[uuid='${uuid}']" \
		-v certificate \
		${OMV_CONFIG_FILE} | xmlstarlet unesc >"${crtfile}"
	  chmod 0640 "${crtfile}"

	  keyfile="${OMV_SSL_CERTIFICATE_DIR}/private/${OMV_SSL_CERTIFICATE_PREFIX}${uuid}.key"
	  xmlstarlet sel -t -m "//system/certificates/sslcertificate[uuid='${uuid}']" \
		-v privatekey \
		${OMV_CONFIG_FILE} | xmlstarlet unesc >"${keyfile}"
	  chmod 0600 "${keyfile}"
  done

# Create symbolic links to files named by the hash values
update-ca-certificates --fresh
