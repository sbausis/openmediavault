#!/bin/sh
#
# This file is part of OpenMediaVault.
#
# @license   http://www.gnu.org/licenses/gpl.html GPL Version 3
# @author    Volker Theile <volker.theile@openmediavault.org>
# @copyright Copyright (c) 2009-2015 Volker Theile
#
# OpenMediaVault is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# OpenMediaVault is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with OpenMediaVault. If not, see <http://www.gnu.org/licenses/>.

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

OMV_COLLECTD_CONFIG=${OMV_COLLECTD_CONFIG:-"/etc/collectd/collectd.conf"}
OMV_COLLECTD_RRDTOOL_MKGRAPH=${OMV_COLLECTD_RRDTOOL_MKGRAPH:-"/usr/sbin/omv-mkgraph"}

IFACE=$(xmlstarlet sel -t \
  -m "//system/network/interfaces/interface[type='ethernet']" \
	-i "count(//system/network/interfaces/interface/slaves[contains(.,current()/devicename)]) = 0" \
		-v "concat(devicename,' ')" \
	-b \
  -b \
  -m "//system/network/interfaces/interface[type='bond' or type='vlan']" \
	-v "concat(devicename,' ')" \
  -b \
  ${OMV_CONFIG_FILE} | xmlstarlet unesc)

cat <<EOF >> ${OMV_COLLECTD_CONFIG}
LoadPlugin interface
<Plugin interface>
EOF
for devicename in ${IFACE}; do
	echo "  Interface \"${devicename}\"" >> ${OMV_COLLECTD_CONFIG}
done
cat <<EOF >> ${OMV_COLLECTD_CONFIG}
  IgnoreSelected false
</Plugin>

EOF

cat <<EOF >> ${OMV_COLLECTD_RRDTOOL_MKGRAPH}
# Plugin: interface
COLOR_INTERFACE_INCOMING="#00cc00" # green
COLOR_INTERFACE_OUTGOING="#ff0000" # red
for devicename in ${IFACE}; do
	[ ! -e "\${DATA}/interface-\${devicename}/if_octets.rrd" ] && continue
EOF
	for ucperiod in HOUR DAY WEEK MONTH YEAR; do
		lcperiod=$(echo ${ucperiod} | tr '[:upper:]' '[:lower:]')
		cat <<EOF >> ${OMV_COLLECTD_RRDTOOL_MKGRAPH}
	rrdtool graph \${IMGDIR}/interface-\${devicename}-${lcperiod}.png --start \${${ucperiod}START} \${DEFAULTS} --title "\${devicename} traffic\${${ucperiod}TITLE}" --slope-mode --lower-limit 0 --vertical-label "Bits/s" \
	  DEF:oavgraw=\${DATA}/interface-\${devicename}/if_octets.rrd:tx:AVERAGE \
	  DEF:ominraw=\${DATA}/interface-\${devicename}/if_octets.rrd:tx:MIN \
	  DEF:omaxraw=\${DATA}/interface-\${devicename}/if_octets.rrd:tx:MAX \
	  DEF:iavgraw=\${DATA}/interface-\${devicename}/if_octets.rrd:rx:AVERAGE \
	  DEF:iminraw=\${DATA}/interface-\${devicename}/if_octets.rrd:rx:MIN \
	  DEF:imaxraw=\${DATA}/interface-\${devicename}/if_octets.rrd:rx:MAX \
	  CDEF:oavg=oavgraw,8,* \
	  CDEF:omin=ominraw,8,* \
	  CDEF:omax=omaxraw,8,* \
	  VDEF:otot=oavg,TOTAL \
	  CDEF:iavg=iavgraw,8,* \
	  CDEF:imin=iminraw,8,* \
	  CDEF:imax=imaxraw,8,* \
	  VDEF:itot=iavg,TOTAL \
	  CDEF:tavg=oavg,iavg,+ \
	  CDEF:tmin=omin,imin,+ \
	  CDEF:tmax=omax,imax,+ \
	  LINE1:oavg\${COLOR_INTERFACE_OUTGOING}:"Outgoing" \
	  GPRINT:oavg:AVERAGE:"%5.1lf%s Avg" \
	  GPRINT:omax:MAX:"%5.1lf%s Max" \
	  GPRINT:oavg:LAST:"%5.1lf%s Last" \
	  GPRINT:otot:"%5.1lf%s Total\l" \
	  LINE1:iavg\${COLOR_INTERFACE_INCOMING}:"Incoming" \
	  GPRINT:iavg:AVERAGE:"%5.1lf%s Avg" \
	  GPRINT:imax:MAX:"%5.1lf%s Max" \
	  GPRINT:iavg:LAST:"%5.1lf%s Last" \
	  GPRINT:itot:"%5.1lf%s Total\l" \
	  COMMENT:"  Total   " \
	  GPRINT:tavg:AVERAGE:"%5.1lf%s Avg" \
	  GPRINT:tmax:MAX:"%5.1lf%s Max" \
	  GPRINT:tavg:LAST:"%5.1lf%s Last\l" \
	  COMMENT:"\${LASTUPDATE}" >/dev/null
EOF
	done
cat <<EOF >> ${OMV_COLLECTD_RRDTOOL_MKGRAPH}
done
EOF
